{"version":3,"sources":["api/todos.ts","api/users.ts","utils.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","getUserById","usersFromServer","find","user","getNextTodoID","todos","reduce","acc","todo","UserInfo","className","href","TodoInfo","classNames","TodoList","map","TodoForm","createNewTodo","useState","setTitle","setUserId","isTitleError","setIsTitleError","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","newTodo","htmlFor","type","placeholder","value","onChange","target","disabled","App","prepareTodos","todosFromServer","setTodos","addTodo","useCallback","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.441a4260.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from './api/users';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nexport const getUserById = (id: number): User => {\n  return <User>usersFromServer.find((user) => user.id === id);\n};\n\nexport const getNextTodoID = (todos: Todo[]): number => {\n  const maxID = todos.reduce((acc, todo) => {\n    return acc > todo.id ? acc : todo.id;\n  }, 0);\n\n  return maxID + 1;\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { PreparedTodo } from '../../types/Todo';\n\ninterface Props {\n  todo: PreparedTodo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { PreparedTodo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: PreparedTodo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)\n      }\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { PreparedTodo, Todo } from '../../types/Todo';\nimport { getNextTodoID, getUserById } from '../../utils';\n\ninterface Props {\n  todos: Todo[]\n  createNewTodo: (todo: PreparedTodo) => void\n}\n\nexport const TodoForm: React.FC<Props> = ({ todos, createNewTodo }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsTitleError(!title);\n    setIsUserError(!userId);\n\n    if (!!title && !!userId) {\n      const newTodo: PreparedTodo = {\n        id: getNextTodoID(todos),\n        title,\n        userId,\n        completed: false,\n        user: getUserById(userId),\n      };\n\n      createNewTodo(newTodo);\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInput\">Title: </label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={(event) => {\n            setIsTitleError(false);\n            setTitle(event.target.value);\n          }}\n        />\n\n        {isTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userInput\">User: </label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"userInput\"\n          value={userId}\n          onChange={(event) => {\n            setIsUserError(false);\n            setUserId(+event.target.value);\n          }}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {\n            usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>\n            ))\n          }\n        </select>\n\n        {isUserError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\nimport { PreparedTodo, Todo } from './types/Todo';\nimport { getUserById } from './utils';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\n\nconst prepareTodos = (todos: Todo[]): PreparedTodo[] => {\n  return todos.map(todo => {\n    return {\n      ...todo,\n      user: getUserById(todo.userId),\n    };\n  }) as PreparedTodo[];\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(\n    prepareTodos(todosFromServer),\n  );\n\n  const addTodo = useCallback((newTodo: PreparedTodo) => {\n    setTodos(prevState => {\n      return [\n        ...prevState,\n        newTodo,\n      ];\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        todos={todos}\n        createNewTodo={addTodo}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}